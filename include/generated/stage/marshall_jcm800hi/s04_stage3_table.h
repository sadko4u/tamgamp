
// s04_stage3_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  1.400000
 // --table_div  11.536382
 // --table_op  1.000000

struct tables04_stage3 { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tables04_stage3_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tables04_stage3&() const { return *(tables04_stage3*)this; }
};

 static tables04_stage3_imp<200> s04_stage3_table __rt_data = {
	0,0.0197453,142.143,200, {
	0.000000000000,0.000081931659,0.000164906890,0.000247848374,0.000331113868,
	0.000414581910,0.000498291141,0.000582226794,0.000666391924,0.000750783663,
	0.000835401129,0.000920242792,0.001005307351,0.001090593442,0.001176099737,
	0.001261824906,0.001347767635,0.001433926617,0.001520300557,0.001606888166,
	0.001693688168,0.001780699295,0.001867920288,0.001955349898,0.002042986885,
	0.002130830019,0.002218878077,0.002307129848,0.002395584127,0.002484239721,
	0.002573095443,0.002662150117,0.002751402575,0.002840851656,0.002930496212,
	0.003020335098,0.003110367183,0.003200591339,0.003291006452,0.003381611412,
	0.003472405119,0.003563386482,0.003654554416,0.003745907846,0.003837445705,
	0.003929166933,0.004021070478,0.004113155297,0.004205420354,0.004297864622,
	0.004390487078,0.004483286712,0.004576262518,0.004669413499,0.004762738665,
	0.004856237034,0.004949907630,0.005043749486,0.005137761643,0.005231943146,
	0.005326293051,0.005420810419,0.005515494318,0.005610343824,0.005705358021,
	0.005800535997,0.005895876849,0.005991379682,0.006087043604,0.006182867735,
	0.006278851197,0.006374993122,0.006471292647,0.006567748915,0.006664361078,
	0.006761128293,0.006858049723,0.006955124538,0.007052351916,0.007149731038,
	0.007247261094,0.007344941280,0.007442770797,0.007540748854,0.007638874664,
	0.007737147447,0.007835566430,0.007934130846,0.008032839932,0.008131692934,
	0.008230689100,0.008329827688,0.008429107959,0.008528529181,0.008628090628,
	0.008727791578,0.008827631318,0.008927609137,0.009027724331,0.009127976204,
	0.009228364061,0.009328887217,0.009429544989,0.009530336701,0.009631261682,
	0.009732319268,0.009833508798,0.009934829617,0.010036281075,0.010137862530,
	0.010239573341,0.010341412875,0.010443380502,0.010545475601,0.010647697551,
	0.010750045740,0.010852519558,0.010955118403,0.011057841676,0.011160688783,
	0.011263659136,0.011366752151,0.011469967248,0.011573303853,0.011676761397,
	0.011780339315,0.011884037046,0.011987854037,0.012091789735,0.012195843594,
	0.012300015074,0.012404303636,0.012508708749,0.012613229885,0.012717866520,
	0.012822618134,0.012927484215,0.013032464250,0.013137557735,0.013242764167,
	0.013348083050,0.013453513891,0.013559056201,0.013664709495,0.013770473294,
	0.013876347121,0.013982330504,0.014088422976,0.014194624074,0.014300933336,
	0.014407350309,0.014513874540,0.014620505582,0.014727242992,0.014834086330,
	0.014941035161,0.015048089052,0.015155247576,0.015262510310,0.015369876833,
	0.015477346728,0.015584919584,0.015692594992,0.015800372547,0.015908251847,
	0.016016232496,0.016124314099,0.016232496267,0.016340778613,0.016449160753,
	0.016557642310,0.016666222906,0.016774902171,0.016883679735,0.016992555234,
	0.017101528306,0.017210598593,0.017319765740,0.017429029396,0.017538389214,
	0.017647844849,0.017757395960,0.017867042209,0.017976783263,0.018086618790,
	0.018196548463,0.018306571957,0.018416688951,0.018526899128,0.018637202173,
	0.018747597774,0.018858085623,0.018968665416,0.019079336850,0.019190099626,
	0.019300953450,0.019411898027,0.019522933070,0.019634058292,0.019745273409
	}
};

double always_inline s04_stage3clip(double x) {
    double f = fabs(x);
    f = f * s04_stage3_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = s04_stage3_table.data[0];
    } else if (i >= s04_stage3_table.size-1) {
        f = s04_stage3_table.data[s04_stage3_table.size-1];
    } else {
    f -= i;
    f = s04_stage3_table.data[i]*(1-f) + s04_stage3_table.data[i+1]*f;
    }
    return copysign(f, x);
}

